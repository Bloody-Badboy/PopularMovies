apply plugin: 'com.android.application'

android {

  compileSdkVersion 29

  defaultConfig {
    applicationId "me.bloodybadboy.popularmovies"
    minSdkVersion 16
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    vectorDrawables.useSupportLibrary = true
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  buildTypes.each {
    it.resValue('string', "the_movie_db_api_key", propOrThrow('THE_MOVIE_DB_API_KEY'))
  }

  lintOptions {
    textReport true
    textOutput 'stdout'
    lintConfig rootProject.file('lint.xml')

    checkDependencies true
    checkTestSources true
    explainIssues false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')

  // Android Support Libraries
  // AppCompat
  implementation "androidx.appcompat:appcompat:${rootProject.versions.appcompat}"

  // Support Design
  implementation "com.google.android.material:material:${rootProject.versions.androidSupport}"

  // CardView
  implementation "androidx.cardview:cardview:${rootProject.versions.androidSupport}"

  // RecycleView
  implementation "androidx.recyclerview:recyclerview:${rootProject.versions.androidSupport}"

  // Palette
  implementation "androidx.palette:palette:${rootProject.versions.androidSupport}"

  // Constraint Layout
  implementation "androidx.constraintlayout:constraintlayout:${rootProject.versions.constraintLayout}"

  // Timber
  implementation "com.jakewharton.timber:timber:${rootProject.versions.timber}"

  // Leak Canary
  debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootProject.versions.leakCanary}"
  releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.versions.leakCanary}"

  // RxJava and RxAndroid
  implementation "io.reactivex.rxjava2:rxjava:${rootProject.versions.rxJava2}"
  implementation "io.reactivex.rxjava2:rxandroid:${rootProject.versions.rxAndroid2}"

  //Retrofit2
  implementation "com.squareup.retrofit2:retrofit:${rootProject.versions.retrofit}"
  implementation "com.squareup.retrofit2:converter-moshi:${rootProject.versions.retrofit}"

  // RxJava Retrofit2 Adapter
  implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.versions.rxRetrofit2Adapter}"

  // ButterKnife
  implementation "com.jakewharton:butterknife:${rootProject.versions.butterKnife}"
  annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.versions.butterKnife}"

  // Glide
  implementation "com.github.bumptech.glide:glide:${rootProject.versions.glide}"
  annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.versions.glide}"

  // Stetho
  implementation "com.facebook.stetho:stetho:${rootProject.versions.stetho}"
  implementation "com.facebook.stetho:stetho-okhttp3:${rootProject.versions.stetho}"

  //Circle ImageView
  implementation "de.hdodenhof:circleimageview:${rootProject.versions.circleImageView}"

  // Testing
  testImplementation "junit:junit:${rootProject.versions.junit}"
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.versions.espressoCore}"
}
